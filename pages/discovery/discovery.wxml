<!--discovery.wxml-->
<view class="top-tab flex-wrp flex-tab">
  <view class="toptab flex-item active">推荐</view>
  <view class="toptab flex-item">热门</view>
  <view class="toptab flex-item">搜索</view>
  <view class="toptab flex-item">收藏</view>
</view>
<view class="container discovery withtab">
  <view class="activity">
    <image src="../../images/24213.jpg" mode="aspectFill"></image>
  </view>
  <view class="feed-item">
    <view class="feed-source">
      <a class="" bindTap="">
        <view class="avatar">
          <image src="../../images/icon1.jpeg"></image>
        </view>
        <text>小喵律师</text>
      </a>
      <!--<image class="item-more" mode="aspectFit" src="../../images/more.png"></image>-->
    </view>
    <view class="feed-content">
      <view class="question">
        <a class="question-link">
          <text>为什么直接修改数组长度或设置数组项的索引时, Vue 不能检测到数组的变动?</text>
        </a>
      </view>
      <view class="answer-body">
        <view>
          <text class="answer-txt">因为没有办法监听任意属性. 当然现在Poxy是可以做到这单的, 不过是一个兼容性的问题, 另一个是如果用了Poxy就是一个新对象, 跟现在Vue在原本对象..</text>
        </view>
        <view class="answer-actions">
          <view class="like dot">
            <a>3.9K 赞同 </a>
          </view>
          <view class="comments dot">
            <a>254 评论 </a>
          </view>
          <!--<view class="follows dot" hidden="true">-->
          <!--<a>27 关注</a>-->
          <!--</view>-->
          <!--<view class="answers dot">-->
          <!--<a>27 回答</a>-->
          <!--</view>-->
          <view class="follow-it">
            <a>关注问题</a>
          </view>
        </view>
      </view>
    </view>
  </view>
  <view class="feed-item">
    <view class="feed-source">
      <a class="" bindTap="">
        <view class="avatar">
          <image src="../../images/icon1.jpeg"></image>
        </view>
        <text>小喵律师</text>
      </a>
      <!--<image class="item-more" mode="aspectFit" src="../../images/more.png"></image>-->
    </view>
    <view class="feed-content">
      <view class="question">
        <a class="question-link">
          <text>为什么直接修改数组长度或设置数组项的索引时, Vue 不能检测到数组的变动?</text>
        </a>
      </view>
      <view class="answer-body">
        <view>
          <text class="answer-txt">因为没有办法监听任意属性. 当然现在Poxy是可以做到这单的, 不过是一个兼容性的问题, 另一个是如果用了Poxy就是一个新对象, 跟现在Vue在原本对象..</text>
        </view>
        <view class="answer-actions">
          <view class="like dot">
            <a>3.9K 赞同 </a>
          </view>
          <view class="comments dot">
            <a>254 评论 </a>
          </view>
          <!--<view class="follows dot" hidden="true">-->
          <!--<a>27 关注</a>-->
          <!--</view>-->
          <!--<view class="answers dot">-->
          <!--<a>27 回答</a>-->
          <!--</view>-->
          <view class="follow-it">
            <a>关注问题</a>
          </view>
        </view>
      </view>
    </view>
  </view>
  <view class="feed-item">
    <view class="feed-source">
      <a class="" bindTap="">
        <view class="avatar">
          <image src="../../images/icon1.jpeg"></image>
        </view>
        <text>小喵律师</text>
      </a>
      <!--<image class="item-more" mode="aspectFit" src="../../images/more.png"></image>-->
    </view>
    <view class="feed-content">
      <view class="question">
        <a class="question-link">
          <text>为什么直接修改数组长度或设置数组项的索引时, Vue 不能检测到数组的变动?</text>
        </a>
      </view>
      <view class="answer-body">
        <view>
          <text class="answer-txt">因为没有办法监听任意属性. 当然现在Poxy是可以做到这单的, 不过是一个兼容性的问题, 另一个是如果用了Poxy就是一个新对象, 跟现在Vue在原本对象..</text>
        </view>
        <view class="answer-actions">
          <view class="like dot">
            <a>3.9K 赞同 </a>
          </view>
          <view class="comments dot">
            <a>254 评论 </a>
          </view>
          <!--<view class="follows dot" hidden="true">-->
          <!--<a>27 关注</a>-->
          <!--</view>-->
          <!--<view class="answers dot">-->
          <!--<a>27 回答</a>-->
          <!--</view>-->
          <view class="follow-it">
            <a>关注问题</a>
          </view>
        </view>
      </view>
    </view>
  </view>


</view>